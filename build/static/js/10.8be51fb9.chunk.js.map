{"version":3,"sources":["selector/organization/organizationSelector.jsx","components/Common/FormSmallComponent/components/RadioComponents.jsx","selector/project/projectSelector.jsx","components/Common/FormSmallComponent/containers/RadioContainer.jsx","components/Common/FormSmallComponent/components/TextareaComponents.jsx","components/Common/FormSmallComponent/containers/TextareaContainer.jsx","components/Common/FormSmallComponent/components/MarkdownComponents.jsx","components/Common/FormSmallComponent/containers/ MarkdownContainer.jsx","components/Common/FormSmallComponent/components/SelectComponents.jsx","components/Common/FormSmallComponent/containers/SelectContainer.jsx","components/Common/FormSmallComponent/components/RichComponents.jsx","components/Common/FormSmallComponent/containers/RichContainer.jsx","components/Common/uploadComponent.jsx","containers/uploadComponentContainer.jsx","action/FormAction.jsx","../node_modules/rc-util/es/Children/toArray.js","components/user/userTabs/UpdatePwd.jsx","containers/users/userTabs/UpdatePwdContainer.jsx","components/user/userTabs/EditUserInfo.jsx","containers/users/userTabs/UpdateInfo.jsx","components/user/UserSetting.jsx","containers/users/UserSettingContainer.jsx"],"names":["__webpack_require__","d","__webpack_exports__","getNewOgSelector","reselect__WEBPACK_IMPORTED_MODULE_0__","_commonSelector__WEBPACK_IMPORTED_MODULE_1__","createSelector","judgementGetNewOg","getNewOg","RadioComponents","props","Radiogroup","es_radio","Group","FormItem","es_form","Item","_props$radioConfig","radioConfig","axiosPath","radioDesc","field","label","_useState","useState","_useState2","Object","slicedToArray","radioValue","setRadioValue","useEffect","GetAllPjAction","external_React_default","a","createElement","key","getFieldDecorator","initialValue","style","width","value","onChange","e","console","log","target","styleComponents","map","cv","className","id","name","desc","getAllPjTypes","judgementGetPjTypes","getAddPjTypes","connect","state","_allPjTypes","RadioComponents_RadioComponents","TextareaComponents","TextArea","input","_props$textareaConfig","textareaConfig","placeholder","setValue","_ref","autosize","minRows","maxRows","whiteSpace","TextareaComponents_TextareaComponents","MarkdownComponents","MarkdownIt","mdParser","height","lib_default","renderHTML","text","render","MarkdownComponents_MarkdownComponents","SelectComponent","_props$selectConfig","selectConfig","on","Option","es_select","selectValue","setSelectValue","handleChange","_v","_allOg","index","groupName","selectData","SelectComponents_SelectComponent","RichComponent","_React$createElement","EditorState","createEmpty","editorState","setEditorState","_useState3","undefined","_useState4","setEditorContent","react_draft_wysiwyg","toolbarClassName","wrapperClassName","editorClassName","localization","locale","translations","generic.add","defineProperty","editorContent","history","inDropdown","inline","list","textAlign","image","uploadCallback","file","imageUploadPromise","Promise","resolve","reject","xhr","XMLHttpRequest","open","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","res","link","saveUrl","picId","error","then","window","localStorage","getItem","_picId","picIdArr","Array","fill","push","localStoreAction","RichComponents_RichComponent","Common_uploadComponent","create","loading","setLoading","imageUrl","setImgUrl","_useState5","routerPath","_useState6","fileList","setfileList","formList","FormConfig","info","status","img","callback","reader","FileReader","result","readAsDataURL","getBase64","originFileObj","uploadConfig","onRemove","indexOf","newFileList","slice","splice","beforeUpload","type","split","isLt10M","size","filter","fileType","message","concat","toConsumableArray","listType","uploadButton","icon","uploadFileName","assign","onSubmit","form","validateFields","err","values","formData","forEach","keys","addFormAction","interfaceUrl","_startAction","ref","formItemLayout","labelCol","xs","span","sm","wrapperCol","offset","checkFormItemLayout","formItemList","RegExpStr","length","item","input_text","rules","required","pattern","RegExp","_MarkdownContainer","containers_SelectContainer","input_textarea","containers_TextareaContainer","radioInput","containers_RadioContainer","richText","containers_RichContainer","input_file","upload","singleFile","src","alt","initForm","FormItem_default","submitButtonName","es_button","htmlType","Fragment","formConstants","_start","toArray","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","children","ret","Children","c","withRouter","setUpdate","confirmDirty","preventDefault","validateFieldsAndScroll","oldpassword","oldPwd","newpassword","newPwd","UPDATEPWD","logout","color","min","max","validator","rule","force","getFieldValue","onBlur","tooltip","title","react_router_dom","to","userTabs_UpdatePwd","EditUserInfo","uploadComponentContainer","_updateUserInfo","EditUserInfo_EditUserInfo","UserSetting","TabPane","tabs","tabKey","setTabKey","defaultActiveKey","tab","svgIcon","fontSize","UpdateInfo","userTabs_UpdatePwdContainer","UserSetting_UserSetting"],"mappings":"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","file":"static/js/10.8be51fb9.chunk.js","sourcesContent":["/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-21 11:01:15\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-15 16:05:56\n * @ 文件解释: 组织类Selector\n */\n\nimport { createSelector } from 'reselect';\nimport { judgementGetNewOg } from '../commonSelector';\n\n/**\n * @description 获取所有组织\n */\nexport const getNewOgSelector = createSelector(\n  judgementGetNewOg,\n  getNewOg => getNewOg\n)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-24 09:49:10\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-11 14:35:07\n * @ 文件解释: 单选框Ui-组件\n */\n\nimport React, { useState, useEffect } from 'react';\nimport {Radio, Form} from 'antd';\nimport { StyleDivFlex, StyleDiv, StyleSpan } from '@/components/styleComponents'\nimport '@/components/styleComponents.less';\n\nexport const RadioComponents = props => {\n  const Radiogroup = Radio.Group;\n  const FormItem = Form.Item;\n  const {\n    axiosPath,\n    radioDesc,\n    field,\n    label\n  } = props.radioConfig;\n  const [radioValue, setRadioValue] = useState(1);\n\n  useEffect(() => {\n    if( axiosPath ){\n      props.GetAllPjAction(axiosPath)\n    }\n  }, [])\n\n  const changeHanle = e => {\n    console.log(radioValue)\n    setRadioValue(e.target.value)\n  }\n\n  return (\n      <FormItem key={field} label={label}>\n        {\n          props.getFieldDecorator(field, {\n            initialValue: 1,\n          })(\n            <Radiogroup style={{width: '100%'}} value={radioValue} onChange={changeHanle}>\n              <StyleDivFlex>\n                {\n                  // props._allPjTypes.map((cv, key) => {\n                  //   return (\n                  //     // 每个小div\n                  //     <StyleDiv className=\"_smallDiv\">\n                  //       <Radio value={cv.id} key={key} className=\"_GszsRadio\">\n                  //         <div>{ cv.proTypeName }</div>\n                  //         <StyleSpan>\n                  //           {cv.proTypeDesc}\n                  //         </StyleSpan>\n                  //       </Radio>\n                  //     </StyleDiv>\n                  //   )\n                  // })\n                  radioDesc.map((cv, key) => {\n                    return (\n                      <StyleDiv className=\"_smallDiv\">              \n                        <Radio value={cv.id} key={key} className=\"_GszsRadio\">\n                           <div>{ cv.name }</div>\n                           <StyleSpan>\n                             {cv.desc}\n                           </StyleSpan>\n                         </Radio>\n                      </StyleDiv>\n                    )\n                  })\n                }\n              </StyleDivFlex>\n            </Radiogroup>\n          )\n        }\n      </FormItem>\n  )\n}\n\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-18 23:17:02\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 09:51:13\n * @ 文件解释: 项目类Selector\n */\n\n\nimport { createSelector } from 'reselect';\nimport { judgementGetPjTypes } from '../commonSelector';\n\n/**\n * @description 获取所有项目类型\n */\nexport const getAllPjTypes = createSelector(\n  judgementGetPjTypes,\n  getAddPjTypes => getAddPjTypes\n)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:17:28\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:17:51\n * @ 文件解释: 单选框容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { RadioComponents } from '../components/RadioComponents';\nimport { GetAllPjAction } from '../../../../action/project/projectAction'\nimport { getAllPjTypes } from '../../../../selector/project/projectSelector';\n\nconst RadioContainer = props => <RadioComponents {...props} />\n\nconst mapStateToProps = state => {\n  return {\n    _allPjTypes: getAllPjTypes(state)\n  }\n}\n\nexport default connect(mapStateToProps, {\n  GetAllPjAction\n})(RadioContainer)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-24 09:52:30\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-29 16:48:29\n * @ 文件解释: 文本框组-UI组件\n */\n\nimport React,{ useState } from 'react';\nimport {\n  Input,\n  Form\n} from 'antd';\n\nexport const TextareaComponents = props => {\n  const { TextArea } = Input;\n  const FormItem = Form.Item;\n  const {\n    field,\n    label,\n    placeholder\n  } = props.textareaConfig;\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  }\n\n  return (\n    <FormItem key={field} label={label} >\n      {\n        props.getFieldDecorator(field, {\n          initialValue: value          \n        })(\n            <TextArea\n            placeholder={placeholder}\n            onChange = {handleChange}\n            autosize={{\n              minRows: 4,\n              maxRows: 8,\n            }}\n            style={{\n              whiteSpace: 'pre-wrap',\n            }}\n          />   \n        )\n      }\n    </FormItem>\n  )\n}\n\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:18:26\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:19:56\n * @ 文件解释: \n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { TextareaComponents } from '../components/TextareaComponents';\n\nconst TextareaContainer = props => <TextareaComponents {...props} />\n\nexport default connect()(TextareaContainer)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-24 09:39:37\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 17:14:04\n * @ 文件解释: Markdown-UI组件\n */\n\nimport React,{ useState } from 'react';\nimport MdEditor from 'react-markdown-editor-lite'\nimport MarkdownIt from 'markdown-it' \n\nexport const MarkdownComponents = props => {\n  \n  const [mdParser] = useState(new MarkdownIt());\n\n  return (\n    <div style={{ height: \"500px\", width: '800px' }}>\n      <MdEditor\n        value={`请输入项目详情`}\n        renderHTML={ text => mdParser.render(text) }\n      />\n    </div>\n  )\n}\n\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:19:39\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:19:42\n * @ 文件解释: Markdown容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { MarkdownComponents } from '../components/MarkdownComponents';\n\nconst MarkdownContainer = props => <MarkdownComponents {...props} />\n\nexport default connect()(MarkdownContainer)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:31:39\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-29 17:00:52\n * @ 文件解释: 下拉框UI组件\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Select, Form } from 'antd';\n\nexport const SelectComponent = props => {\n  const { \n    axiosPath,\n    field,\n    label,\n    initialValue,\n    on\n  } = props.selectConfig;\n  const { Option } = Select;\n  const FormItem = Form.Item;\n  const [selectValue, setSelectValue] = useState(initialValue)\n\n  const handleChange = (_v) => {\n    setSelectValue(_v)\n  }\n\n  return (\n    <FormItem key={field} label={label} >\n      {props.getFieldDecorator(field, {\n        initialValue: selectValue\n      })(\n        !on ?\n          <Select onChange={handleChange}>\n            {\n              props.selectConfig.selectData.map((cv, index) => {\n                return <Option value={cv.id} key={index}>\n                  {cv.value}\n                </Option>\n              })\n            }\n          </Select> :\n          props._allOg ?\n            <Select onChange={handleChange}>\n              {\n                props._allOg.map((cv, index) => {\n                  return <Option value={cv.id} key={index}>\n                    {cv.groupName}\n                  </Option>\n                })\n              }\n            </Select> : <Select />\n      )}\n    </FormItem>\n  )\n}","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:16:26\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-19 13:26:08\n * @ 文件解释: 下拉框容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SelectComponent } from '../components/SelectComponents';\nimport { getNewOgSelector } from '@/selector/organization/organizationSelector';\n\nconst mapStateToProps = state => {\n  return {\n    _allOg: getNewOgSelector(state)\n  }\n}\n\nconst SelectContainer = props => <SelectComponent {...props} />\n\nexport default connect(mapStateToProps, null)(SelectContainer);","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-25 07:43:26\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 09:11:22\n * @ 文件解释: 富文本UI组件\n */\n\nimport React,{ useState, useEffect } from 'react';\nimport { EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nexport const RichComponent = props => {\n\n  // 初始化富文本内容\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [editorContent, setEditorContent] = useState(undefined);\n\n  // 每次编辑器状态发生改变的时候调用这个函数,传递的参数是EditorState类型\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState)\n  };\n  // 异步上传富文本中的图片,获取返回的链接\n  const imageUploadCallBack = file => {\n    let imageUploadPromise = new Promise(\n      (resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', 'xxx'); // 定义的图片地址\n        const data = new FormData();\n        data.append('file', file);\n        xhr.send(data);\n        xhr.addEventListener('load', () => {\n          const response = JSON.parse(xhr.responseText);\n          const [res] = response.data; // 获取返回的链接\n          resolve({ data: { link: res.saveUrl }, picId: res.picId });\n        });\n        xhr.addEventListener('error', () => {\n          const error = JSON.parse(xhr.responseText);\n          reject(error);\n        });\n      }\n    );\n\n    imageUploadPromise.then(res => {\n      // 将富文本中的图片保存在localStore\n      if (window.localStorage.getItem('picId')) {\n        const _picId = window.localStorage.getItem('picId');\n        let picIdArr = Array(1).fill(_picId);\n        picIdArr.push(res.picId);\n        props.localStoreAction(1, 'picId', picIdArr);\n      } else {\n        props.localStoreAction(1, 'picId', res.picId);\n      }\n    })\n    return imageUploadPromise;\n  }\n\n  // 每次编辑器状态发生改变的时候调用这个函数,传递的参数是RawDraftContentState类型\n  const onEditorChange = editorContent => {\n    setEditorContent(editorContent)\n  };\n\n  return (\n    <div>\n      <Editor\n        editorState={editorState}\n        toolbarClassName=\"home-toolbar\"\n        wrapperClassName=\"home-wrapper\"\n        editorClassName=\"home-editor\"\n        localization={{ locale: 'zh', translations: { 'generic.add': '添加' } }}\n        wrapperClassName=\"wysiwyg-wrapper\"\n        placeholder=\"请输入正文\"\n        onEditorStateChange={onEditorStateChange}\n        onContentStateChange={onEditorChange} \n        toolbar={{\n          history: { inDropdown: true },\n          inline: { inDropdown: false },\n          list: { inDropdown: true },\n          textAlign: { inDropdown: true },\n          image: { uploadCallback: imageUploadCallBack },\n        }}\n      />\n    </div>\n  )\n}","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-25 07:42:31\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 07:42:34\n * @ 文件解释: 富文本容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { RichComponent } from '../components/RichComponents';\n\nconst RichContainer = props => <RichComponent {...props} />\n\nexport default connect()(RichContainer)","/**\n * @ 作者: Gszs\n * @ 创建时间: 2019-05-04 22:08:25\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-28 11:57:40\n * @ 文件解释: 表单上传公共组件(涵盖富文本,markdown)\n */\n\nimport React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Upload,\n  Button,\n  Icon,\n  message\n} from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport RadioContainer from './FormSmallComponent/containers/RadioContainer';\nimport TextareaContainer from './FormSmallComponent/containers/TextareaContainer';\nimport MarkdownContainer from './FormSmallComponent/containers/ MarkdownContainer';\nimport SelectContainer from './FormSmallComponent/containers/SelectContainer';\nimport RichContainer from './FormSmallComponent/containers/RichContainer';\nimport '../../style/components/common/uploadComponent.less';\n\nconst BaseFormComponent = props => {\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImgUrl] = useState('');\n  // 用来获取原始组件的push方法\n  const history = props.routerPath;\n\n  const [fileList, setfileList] = useState([]);\n\n  // 表单配置\n  const formList = props.FormConfig;\n\n  // 判断是否要开启横向表格布局\n  const checkFormItemLayout = () => {\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 19, offset: 1 },\n      },\n    };\n    if (props.formItemLayout) return formItemLayout\n  }\n\n  // Base64\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === 'done') {\n      getBase64(info.file.originFileObj, imageUrl => {\n        setLoading(false);\n        setImgUrl(imageUrl);\n      })\n    }\n  };\n\n  // 配置上传\n  const uploadConfig = {\n    // 移除文件\n    onRemove: file => {\n      const index = fileList.indexOf(file); //取被删除者下标\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setfileList(newFileList);\n    },\n\n    //上传前的操作\n    beforeUpload: file => {\n      const imgType = ['image/jpeg', 'image/jpg', 'image/png'];\n\n      // 处理图片\n      if (file.type.split('/')[0] === 'image') {\n        const isLt10M = file.size / 1024 / 1024 < 10; // 限制图片不得大于10M\n        const checkImgType = imgType.filter(\n          fileType => file.type === fileType\n        );\n        if (!checkImgType) {\n          message.error('图片上传类型只允许JPG , PNG, JPEG,请检查你的格式');\n        }\n        if (!isLt10M) {\n          message.error('图片大小不允许超过10M');\n        }\n      }\n\n      // 处理视频 \n      if (file.type.split('/')[0] === 'video') {\n        const isLt300M = file.size / 1024 / 1024 < 300; // 限制视频不得大于300M\n        if (!isLt300M) {\n          message.error('视频大小不允许超过300M');\n        }\n      }\n      setfileList([...fileList, file]);\n      return false;\n    },\n\n    listType: 'picture-card',\n    // showUploadList: false,\n    // fileList,\n  };\n\n  // uploadButton按钮\n  const uploadButton = (\n    <div>\n      <Icon type={loading ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">\n        { props.uploadFileName }\n      </div>\n    </div>\n  );\n\n  // 上传提交\n  const handleSubmit = e => {\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        const formData = new FormData();\n        fileList.forEach(file => {\n          formData.append('file', file);\n        });\n        Object.keys(values).map((cv, index) => {\n          formData.append(cv, values[cv]);\n        });\n        // props._startAction -> 用于在FormAction中做开始请求的中转Action\n        props.addFormAction(props.interfaceUrl, formData, props._startAction);\n      } else {\n        message.error(`表单格式有误`);\n      }\n    });\n  };\n\n  // 核心处理(渲染整个表格)\n  const initForm = () => {\n    const { getFieldDecorator } = props.form,\n      FormItem = Form.Item,\n      formItemList = [];\n\n    // 正则处理特殊字符\n    const RegExpStr = /[^<>&*%$^|\\\\]+$/gi;\n\n    if (formList && formList.length > 0) {\n      formList.forEach(item => {\n\n        let label = item.label,\n          field = item.field,\n          initialValue = item.initialValue || '',\n          placeholder = item.placeholder || '';\n\n        // 文本框\n        if (item.type === 'text') {\n          const input_text = (\n            <FormItem key={field} label={label}>\n              {getFieldDecorator(field, {\n                rules: [\n                  {\n                    required: true,\n                    message: placeholder,\n                  },\n                  {\n                    pattern: new RegExp(RegExpStr, 'ig'),\n                    message: '不允许输入特殊字符',\n                  },\n                ],\n                // initialValue: initialValue\n              })(<Input type={item.text} placeholder={placeholder} />)}\n            </FormItem>\n          );\n          formItemList.push(input_text);\n        }\n        // Markdown\n        else if (item.type === 'markdown') {\n          const input_text = (\n            <FormItem key={field} label={label}>\n              {getFieldDecorator(field, {\n                rules: [\n                  {\n                    required: true,\n                    message: placeholder,\n                  }\n                ]\n              })(<MarkdownContainer />)}\n            </FormItem>\n          );\n          formItemList.push(input_text);\n        }\n        // 下拉框\n        else if (item.type === 'select') {\n          const input_text = <SelectContainer\n            selectConfig={item}\n            getFieldDecorator={getFieldDecorator}\n          />\n          formItemList.push(input_text);\n        }\n        // \b文本区域\n        else if (item.type === 'textarea') {\n          const input_textarea = <TextareaContainer\n            textareaConfig={item}\n            getFieldDecorator={getFieldDecorator}\n          />\n          formItemList.push(input_textarea);\n        }\n        // 单选框\n        else if (item.type === 'radio') {\n          const radioInput = <RadioContainer\n            getFieldDecorator={getFieldDecorator}\n            radioConfig={item}\n          />\n          formItemList.push(radioInput);\n        }\n        // 富文本\n        else if (item.type === 'richText') {\n          const richText = (<FormItem key={field} label={label} >\n            {getFieldDecorator(field)(<RichContainer />)}\n          </FormItem>)\n          formItemList.push(richText);\n        }\n        // 文件 \n        else if (item.type === 'file') {\n          const input_file = (\n            <FormItem key={field} label={label}>\n              {getFieldDecorator(field)(\n                <Upload\n                  {...uploadConfig}\n                  onChange={handleChange}\n                >\n                  {\n                    props.singleFile ?\n                      fileList.length >= 1 ? null : imageUrl ?\n                        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton\n                      :\n                      imageUrl ?\n                        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton\n                  }\n                </Upload>\n              )}\n            </FormItem>\n          );\n          formItemList.push(input_file);\n        }\n      });\n    }\n    return formItemList;\n  };\n  return (\n    <Form onSubmit={handleSubmit} ref={props._ref} {...checkFormItemLayout()} >\n      {initForm()}\n      {/* 如果没有设置submitButtonName则表示嵌入到Modal里 */}\n      <FormItem>\n        {\n          props.submitButtonName ?\n            <Button\n              loading={loading}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"submitButton\"\n            >\n              {loading ? `${props.submitButtonName}中` : `${props.submitButtonName}`}\n            </Button> :\n            <></>\n        }\n      </FormItem>\n    </Form>\n  );\n};\n\nexport default Form.create()(BaseFormComponent);\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-07-29 10:13:13\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:13:28\n * @ 文件解释: 公共上传文件容器组件\n */\n\n/**\n * @description 使用方法\n * @one 获取表格基础设置\n * @two 获取路由跳转\b\bhistory\n * @three 获取Action\n * @four  获取上传完后的跳转地址\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport BaseFormComponent from '../components/Common/uploadComponent';\nimport { addFormAction } from '../action/FormAction';\n\nconst UpoloadComponentContainer = props => <BaseFormComponent {...props} />\n\nexport default connect(\n  null, {\n    addFormAction,\n  }\n)(UpoloadComponentContainer);\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-07-30 15:20:35\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-10 14:13:48\n * @ 文件解释: 表格数据 - Action\n */\n\nimport * as formConstants from '../constants/FormConstants';\n\n/**\n * @description 新增表单\n * @param {String} path axios请求地址\n * @param {Object} path 开始请求的中转Action\n */\nexport const addFormAction = (axiosPath, formData, _startAction) => {\n  return {\n    type: formConstants.addForm._start,\n    axiosPath,\n    formData,\n    _startAction\n  }\n}\n\n// // 新增表单成功\n// export const addFormSuccessAction = payload => {\n//   return {\n//     type: formConstants.addForm._success,\n//     payload\n//   }\n// }\n\n// // 新增表单失败\n// export const addFormErrorAction = error => {\n//   return {\n//     type: formConstants.addForm._fail,\n//     error\n//   }\n// }\n\n\n\n","import React from 'react';\nexport default function toArray(children) {\n  var ret = [];\n  React.Children.forEach(children, function (c) {\n    ret.push(c);\n  });\n  return ret;\n}","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-30 15:37:30\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-12 15:23:55\n * @ 文件解释: 更改密码UI组件\n */\n\nimport React,{useState, useEffect} from 'react';\nimport { Form, Input, Button, message, Tooltip } from 'antd';\nimport {Link, withRouter} from 'react-router-dom';\nimport { UPDATEPWD } from '@/axios';\nimport { phonenumber } from '@/constants/settingConstant'\n\nconst UpdatePwd = props => {\n  \n  const [update, setUpdate] = useState(false);\n  const [confirmDirty, setConfirmDirty] = useState(false);\n  const { getFieldDecorator } = props.form;\n  const FormItem = Form.Item;\n  \n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 12, offset: 1 },\n    },\n  };\n\n  // 处理确认密码输入\n\tconst handleConfirmBlur = e => {\n    const value = e.target.value;\n    setUpdate(confirmDirty || !!value)\n  }\n\n  // 处理焦点\n\tconst validateToNextPassword = (rule, value, callback) => {\n    const form = props.form;\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n  // 确认密码\n\tconst compareToFirstPassword = (rule, value, callback) => {\n    const form = props.form;\n\t\tif(value && value !== form.getFieldValue('newPwd')){\n\t\t\t\tcallback('两次密码不一致')\n\t\t}\n\t\tcallback()\n  }\n  \n  // 提交函数\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFieldsAndScroll((err, values) => {\n      if(!err){\n        const formData = {}; \n        formData.oldpassword = values.oldPwd;\n        formData.newpassword = values.newPwd;\n        UPDATEPWD(formData).then((res, err) => {\n          if(res && res.status === 200){\n            const { history } = props;\n            props.logout((()=>{history.push('/login')}));\n          } else if(res && res.status !== 200 ){\n            message.error(res.message);\n          }\n          else{\n            message.error(err);\n          }\n        })\n      }else{\n        message.error('表单有误')\n      }\n    })\n  }\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      {...formItemLayout}\n    >\n      <FormItem label=\"请输入原密码\">\n        {getFieldDecorator('oldPwd', {\n          rules: [\n            {\n              required: true,\n              message: '密码不能为空',\n            }\n          ],\n        })(<Input\n          type=\"password\"\n          placeholder=\"请输入原始密码\"\n          style={{\n            color: '#666'\n          }}\n        />)}\n      </FormItem>\n      <FormItem label=\"请输入新密码\">\n        {getFieldDecorator('newPwd', {\n          rules: [\n            {\n              required: true,\n              message: '密码不能为空',\n            },\n            {\n              min: 6,\n              max: 16,\n              message: '密码长度必需大于6位,小于16位',\n            },\n            {\n              pattern: /^\\w+$/g,\n              message: '密码不能出现非法字符',\n            },\n            {\n              validator: validateToNextPassword,\n            },\n          ],\n        })(<Input\n          type=\"password\"\n          placeholder=\"请输入新密码\"\n          style={{\n            color: '#666'\n          }}\n        />)}\n      </FormItem>\n      <FormItem label=\"再次输入新密码\">\n        {getFieldDecorator('confirm', {\n          rules: [\n            {\n              required: true,\n              message: '密码不能为空',\n            },\n            {\n              validator: compareToFirstPassword,\n            },\n          ],\n        })(\n          <Input\n            type=\"password\"\n            placeholder=\"确认密码\"\n            onBlur={handleConfirmBlur}\n            style={{\n              color: '#666'\n            }}\n          />\n        )}\n      </FormItem>\n      <FormItem  wrapperCol={{\n            xs: { span: 24, offset: 0 },\n            sm: { span: 24, offset: 0 },\n          }}>\n        <Tooltip title=\"成功修改密码后，将跳到登录页你可以用你的新密码登录\">\n          <Button className=\"updateButton\" htmlType=\"submit\" >\n            确定修改\n          </Button>\n        </Tooltip>\n        <Button className=\"forgetButton\">\n          <Link to=\"/private/users/forget_pwd\">忘记密码</Link>\n        </Button>\n      </FormItem>\n    </Form>\n  )\n}\n\nexport default withRouter(Form.create()(UpdatePwd));","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-30 16:09:06\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-21 20:54:08\n * @ 文件解释: 更新密码容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport UpdatePwd from '@/components/user/userTabs/UpdatePwd';\nimport { logout } from '@/action/settingAction'\n\nconst UpdatePwdContainer = props => <UpdatePwd {...props} />  \n\nexport default connect(null, {\n  logout\n})(UpdatePwdContainer)\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-30 15:36:59\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-11 15:21:00\n * @ 文件解释: 设置个人信息/图像组件\n */\n\nimport React from 'react';\nimport UploadComponentContainer from '@/containers/uploadComponentContainer';\nimport '@/style/components/project/addProject.less';\nimport { _updateUserInfo } from '@/axios/config';\n\n\nexport const EditUserInfo = props => {\n\n  // 配置表单\n  const updateUserInfo = [\n    {\n      label: '修改头像',\n      field: 'avatar',\n      type: 'file'\n    },\n    {\n      label: '显示名称',\n      field: 'nickname',\n      type: 'text',\n      placeholder: '输入你的昵称，让你认识的人认出你',\n      initialValue: '请输入显示名称'\n    },\n    {\n      label: '性别',\n      field: 'gender',\n      type: 'radio',\n      radioDesc: [ // 如果不是动态获取数据,要设置为这样的格式\n        {\n          id: 1,\n          name: '男',\n        },\n        {\n          id: 2,\n          name: '女',\n        }\n      ],\n    },\n    {\n      label: '个人介绍',\n      field: 'selfIntro',\n      type: 'textarea',\n      placeholder: '告诉我们关于你的介绍，少于250字符',\n      initialValue: '请输入个人介绍'\n    }\n  ]\n  return (\n    <>\n      <div className=\"updateUserInfoStyle\">\n        <UploadComponentContainer\n          FormConfig={updateUserInfo}\n          formItemLayout = {true} // 是否开启横向表格布局\n          submitButtonName = \"保存\"\n          interfaceUrl = {_updateUserInfo} \n        />\n      </div>\n    </>\n  )\n}","/**\n * @ Author: Gszs\n * @ Create Time: 2019-10-10 09:39:56\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-10 09:39:57\n * @ 文件解释: 修改资料容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { EditUserInfo } from '../../../components/user/userTabs/EditUserInfo'\n\nconst UpdateUserInfoContainer = props => <EditUserInfo {...props} />  \n\nexport default connect(null, null)(UpdateUserInfoContainer)\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-30 13:25:39\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-10 10:12:05\n * @ 文件解释: 个人设置UI组件\n */\n\nimport React, { useState } from 'react';\nimport { Tabs } from 'antd';\nimport UpdatePwdContainer from '@/containers/users/userTabs/UpdatePwdContainer';\nimport UpdateUserInfoContainer from '@/containers/users/userTabs/UpdateInfo';\nimport { SVGICON } from '@/components/svg/svgIcon';\nimport '@/style/components/users/userSetting.less';\n\nexport const UserSetting = props => {\n\n  const { TabPane } = Tabs;\n  const [tabKey, setTabKey] = useState(1);\n\n  // 切换Tabs\n  const handleChange = key => {\n    setTabKey(key)\n  }\n\n  return (\n    <div className=\"TabRegion\">\n      <Tabs defaultActiveKey={tabKey} onChange={handleChange} >\n        <TabPane\n          tab={\n            <span>\n              <SVGICON\n                type=\"icon-bianji\"\n                style={{\n                  fontSize: '20px'\n                }}\n              />\n              修改资料\n            </span>\n          }\n          key={1}\n        >\n          <UpdateUserInfoContainer />\n        </TabPane>\n        <TabPane\n          tab={\n            <span>\n              <SVGICON\n                type=\"icon-mima\"\n                style={{\n                  fontSize: '20px'\n                }}\n              />\n              修改密码\n            </span>\n          }\n          key={2}\n        >\n          <div className=\"updatePwd\">\n            <UpdatePwdContainer />\n          </div>\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-30 13:30:06\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-30 13:30:07\n * @ 文件解释: 个人设置容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { UserSetting } from '@/components/user/UserSetting';\n\nconst UserSettingContainer = props => <UserSetting {...props} />\n\nexport default connect(null, null)(UserSettingContainer)\n"],"sourceRoot":""}