{"version":3,"sources":["components/BreadcrumbCustom.jsx","selector/organization/organizationSelector.jsx","components/Common/FormSmallComponent/components/RadioComponents.jsx","selector/project/projectSelector.jsx","components/Common/FormSmallComponent/containers/RadioContainer.jsx","components/Common/FormSmallComponent/components/TextareaComponents.jsx","components/Common/FormSmallComponent/containers/TextareaContainer.jsx","components/Common/FormSmallComponent/components/MarkdownComponents.jsx","components/Common/FormSmallComponent/containers/ MarkdownContainer.jsx","components/Common/FormSmallComponent/components/SelectComponents.jsx","components/Common/FormSmallComponent/containers/SelectContainer.jsx","components/Common/FormSmallComponent/components/RichComponents.jsx","components/Common/FormSmallComponent/containers/RichContainer.jsx","components/Common/uploadComponent.jsx","containers/uploadComponentContainer.jsx","action/FormAction.jsx","components/project/AddProject.jsx","containers/project/AddProjectContainer.jsx"],"names":["BreadcrumbCustom","first","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","antd_es_breadcrumb__WEBPACK_IMPORTED_MODULE_1__","Item","this","props","second","style","margin","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","React","Component","__webpack_require__","d","__webpack_exports__","getNewOgSelector","reselect__WEBPACK_IMPORTED_MODULE_0__","_commonSelector__WEBPACK_IMPORTED_MODULE_1__","createSelector","judgementGetNewOg","getNewOg","RadioComponents","Radiogroup","es_radio","Group","FormItem","es_form","_props$radioConfig","radioConfig","axiosPath","radioDesc","field","label","_useState","useState","_useState2","Object","slicedToArray","radioValue","setRadioValue","useEffect","GetAllPjAction","external_React_default","key","getFieldDecorator","initialValue","width","value","onChange","e","console","log","target","styleComponents","map","cv","className","id","name","desc","getAllPjTypes","judgementGetPjTypes","getAddPjTypes","connect","state","_allPjTypes","RadioComponents_RadioComponents","TextareaComponents","TextArea","input","_props$textareaConfig","textareaConfig","placeholder","setValue","_ref","autosize","minRows","maxRows","whiteSpace","TextareaComponents_TextareaComponents","MarkdownComponents","MarkdownIt","mdParser","height","lib_default","renderHTML","text","render","MarkdownComponents_MarkdownComponents","SelectComponent","_props$selectConfig","selectConfig","on","Option","es_select","selectValue","setSelectValue","handleChange","_v","_allOg","index","groupName","selectData","SelectComponents_SelectComponent","RichComponent","_React$createElement","EditorState","createEmpty","editorState","setEditorState","_useState3","undefined","_useState4","setEditorContent","react_draft_wysiwyg","toolbarClassName","wrapperClassName","editorClassName","localization","locale","translations","generic.add","defineProperty","editorContent","history","inDropdown","inline","list","textAlign","image","uploadCallback","file","imageUploadPromise","Promise","resolve","reject","xhr","XMLHttpRequest","open","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","res","link","saveUrl","picId","error","then","window","localStorage","getItem","_picId","picIdArr","Array","fill","push","localStoreAction","RichComponents_RichComponent","Common_uploadComponent","create","loading","setLoading","imageUrl","setImgUrl","_useState5","routerPath","_useState6","fileList","setfileList","formList","FormConfig","info","status","img","callback","reader","FileReader","result","readAsDataURL","getBase64","originFileObj","uploadConfig","onRemove","indexOf","newFileList","slice","splice","beforeUpload","type","split","isLt10M","size","filter","fileType","message","concat","toConsumableArray","listType","uploadButton","icon","uploadFileName","assign","onSubmit","form","validateFields","err","values","formData","forEach","keys","addFormAction","interfaceUrl","_startAction","ref","formItemLayout","labelCol","xs","span","sm","wrapperCol","offset","checkFormItemLayout","formItemList","RegExpStr","length","item","input_text","rules","required","pattern","RegExp","_MarkdownContainer","containers_SelectContainer","input_textarea","containers_TextareaContainer","radioInput","containers_RadioContainer","richText","containers_RichContainer","input_file","upload","singleFile","src","alt","initForm","FormItem_default","submitButtonName","es_button","htmlType","Fragment","formConstants","_start","AddProject","addProject","_findAllOrganization","_allProjectType","routerTitle","uploadComponentContainer","_addProject","AddProject_AddProject"],"mappings":"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","file":"static/js/11.c391b0e0.chunk.js","sourcesContent":["/**\n * @ 作者: Gszs\n * @ 创建时间: 2019-05-01 01:00:32\n * @ 修改人: Gszs\n * @ 最新修改时间: 2019-06-09 13:58:39\n * @ 文件解释: 面包屑独立组件\n */\n\n\nimport React from 'react';\nimport {Breadcrumb} from 'antd';\nimport {Link} from 'react-router-dom';\n\nclass BreadcrumbCustom extends React.Component {\n  render () {\n    const first = <Breadcrumb.Item>{this.props.first}</Breadcrumb.Item> || '';\n    const second = <Breadcrumb.Item>{this.props.second}</Breadcrumb.Item> || '';\n    return (\n      <span>\n        <Breadcrumb style={{margin: '12px 0'}}>\n          <Breadcrumb.Item>\n            <Link to={'/app/dashboard/index'}>首页</Link>\n          </Breadcrumb.Item>\n          {first}\n          {second}\n        </Breadcrumb>\n      </span>\n    );\n  }\n}\n\nexport default BreadcrumbCustom;\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-21 11:01:15\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-15 16:05:56\n * @ 文件解释: 组织类Selector\n */\n\nimport { createSelector } from 'reselect';\nimport { judgementGetNewOg } from '../commonSelector';\n\n/**\n * @description 获取所有组织\n */\nexport const getNewOgSelector = createSelector(\n  judgementGetNewOg,\n  getNewOg => getNewOg\n)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-24 09:49:10\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-11 14:35:07\n * @ 文件解释: 单选框Ui-组件\n */\n\nimport React, { useState, useEffect } from 'react';\nimport {Radio, Form} from 'antd';\nimport { StyleDivFlex, StyleDiv, StyleSpan } from '@/components/styleComponents'\nimport '@/components/styleComponents.less';\n\nexport const RadioComponents = props => {\n  const Radiogroup = Radio.Group;\n  const FormItem = Form.Item;\n  const {\n    axiosPath,\n    radioDesc,\n    field,\n    label\n  } = props.radioConfig;\n  const [radioValue, setRadioValue] = useState(1);\n\n  useEffect(() => {\n    if( axiosPath ){\n      props.GetAllPjAction(axiosPath)\n    }\n  }, [])\n\n  const changeHanle = e => {\n    console.log(radioValue)\n    setRadioValue(e.target.value)\n  }\n\n  return (\n      <FormItem key={field} label={label}>\n        {\n          props.getFieldDecorator(field, {\n            initialValue: 1,\n          })(\n            <Radiogroup style={{width: '100%'}} value={radioValue} onChange={changeHanle}>\n              <StyleDivFlex>\n                {\n                  // props._allPjTypes.map((cv, key) => {\n                  //   return (\n                  //     // 每个小div\n                  //     <StyleDiv className=\"_smallDiv\">\n                  //       <Radio value={cv.id} key={key} className=\"_GszsRadio\">\n                  //         <div>{ cv.proTypeName }</div>\n                  //         <StyleSpan>\n                  //           {cv.proTypeDesc}\n                  //         </StyleSpan>\n                  //       </Radio>\n                  //     </StyleDiv>\n                  //   )\n                  // })\n                  radioDesc.map((cv, key) => {\n                    return (\n                      <StyleDiv className=\"_smallDiv\">              \n                        <Radio value={cv.id} key={key} className=\"_GszsRadio\">\n                           <div>{ cv.name }</div>\n                           <StyleSpan>\n                             {cv.desc}\n                           </StyleSpan>\n                         </Radio>\n                      </StyleDiv>\n                    )\n                  })\n                }\n              </StyleDivFlex>\n            </Radiogroup>\n          )\n        }\n      </FormItem>\n  )\n}\n\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-18 23:17:02\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 09:51:13\n * @ 文件解释: 项目类Selector\n */\n\n\nimport { createSelector } from 'reselect';\nimport { judgementGetPjTypes } from '../commonSelector';\n\n/**\n * @description 获取所有项目类型\n */\nexport const getAllPjTypes = createSelector(\n  judgementGetPjTypes,\n  getAddPjTypes => getAddPjTypes\n)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:17:28\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:17:51\n * @ 文件解释: 单选框容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { RadioComponents } from '../components/RadioComponents';\nimport { GetAllPjAction } from '../../../../action/project/projectAction'\nimport { getAllPjTypes } from '../../../../selector/project/projectSelector';\n\nconst RadioContainer = props => <RadioComponents {...props} />\n\nconst mapStateToProps = state => {\n  return {\n    _allPjTypes: getAllPjTypes(state)\n  }\n}\n\nexport default connect(mapStateToProps, {\n  GetAllPjAction\n})(RadioContainer)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-24 09:52:30\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-29 16:48:29\n * @ 文件解释: 文本框组-UI组件\n */\n\nimport React,{ useState } from 'react';\nimport {\n  Input,\n  Form\n} from 'antd';\n\nexport const TextareaComponents = props => {\n  const { TextArea } = Input;\n  const FormItem = Form.Item;\n  const {\n    field,\n    label,\n    placeholder\n  } = props.textareaConfig;\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  }\n\n  return (\n    <FormItem key={field} label={label} >\n      {\n        props.getFieldDecorator(field, {\n          initialValue: value          \n        })(\n            <TextArea\n            placeholder={placeholder}\n            onChange = {handleChange}\n            autosize={{\n              minRows: 4,\n              maxRows: 8,\n            }}\n            style={{\n              whiteSpace: 'pre-wrap',\n            }}\n          />   \n        )\n      }\n    </FormItem>\n  )\n}\n\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:18:26\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:19:56\n * @ 文件解释: \n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { TextareaComponents } from '../components/TextareaComponents';\n\nconst TextareaContainer = props => <TextareaComponents {...props} />\n\nexport default connect()(TextareaContainer)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-24 09:39:37\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 17:14:04\n * @ 文件解释: Markdown-UI组件\n */\n\nimport React,{ useState } from 'react';\nimport MdEditor from 'react-markdown-editor-lite'\nimport MarkdownIt from 'markdown-it' \n\nexport const MarkdownComponents = props => {\n  \n  const [mdParser] = useState(new MarkdownIt());\n\n  return (\n    <div style={{ height: \"500px\", width: '800px' }}>\n      <MdEditor\n        value={`请输入项目详情`}\n        renderHTML={ text => mdParser.render(text) }\n      />\n    </div>\n  )\n}\n\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:19:39\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:19:42\n * @ 文件解释: Markdown容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { MarkdownComponents } from '../components/MarkdownComponents';\n\nconst MarkdownContainer = props => <MarkdownComponents {...props} />\n\nexport default connect()(MarkdownContainer)","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:31:39\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-29 17:00:52\n * @ 文件解释: 下拉框UI组件\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Select, Form } from 'antd';\n\nexport const SelectComponent = props => {\n  const { \n    axiosPath,\n    field,\n    label,\n    initialValue,\n    on\n  } = props.selectConfig;\n  const { Option } = Select;\n  const FormItem = Form.Item;\n  const [selectValue, setSelectValue] = useState(initialValue)\n\n  const handleChange = (_v) => {\n    setSelectValue(_v)\n  }\n\n  return (\n    <FormItem key={field} label={label} >\n      {props.getFieldDecorator(field, {\n        initialValue: selectValue\n      })(\n        !on ?\n          <Select onChange={handleChange}>\n            {\n              props.selectConfig.selectData.map((cv, index) => {\n                return <Option value={cv.id} key={index}>\n                  {cv.value}\n                </Option>\n              })\n            }\n          </Select> :\n          props._allOg ?\n            <Select onChange={handleChange}>\n              {\n                props._allOg.map((cv, index) => {\n                  return <Option value={cv.id} key={index}>\n                    {cv.groupName}\n                  </Option>\n                })\n              }\n            </Select> : <Select />\n      )}\n    </FormItem>\n  )\n}","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-23 23:16:26\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-19 13:26:08\n * @ 文件解释: 下拉框容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SelectComponent } from '../components/SelectComponents';\nimport { getNewOgSelector } from '@/selector/organization/organizationSelector';\n\nconst mapStateToProps = state => {\n  return {\n    _allOg: getNewOgSelector(state)\n  }\n}\n\nconst SelectContainer = props => <SelectComponent {...props} />\n\nexport default connect(mapStateToProps, null)(SelectContainer);","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-25 07:43:26\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 09:11:22\n * @ 文件解释: 富文本UI组件\n */\n\nimport React,{ useState, useEffect } from 'react';\nimport { EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nexport const RichComponent = props => {\n\n  // 初始化富文本内容\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [editorContent, setEditorContent] = useState(undefined);\n\n  // 每次编辑器状态发生改变的时候调用这个函数,传递的参数是EditorState类型\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState)\n  };\n  // 异步上传富文本中的图片,获取返回的链接\n  const imageUploadCallBack = file => {\n    let imageUploadPromise = new Promise(\n      (resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', 'xxx'); // 定义的图片地址\n        const data = new FormData();\n        data.append('file', file);\n        xhr.send(data);\n        xhr.addEventListener('load', () => {\n          const response = JSON.parse(xhr.responseText);\n          const [res] = response.data; // 获取返回的链接\n          resolve({ data: { link: res.saveUrl }, picId: res.picId });\n        });\n        xhr.addEventListener('error', () => {\n          const error = JSON.parse(xhr.responseText);\n          reject(error);\n        });\n      }\n    );\n\n    imageUploadPromise.then(res => {\n      // 将富文本中的图片保存在localStore\n      if (window.localStorage.getItem('picId')) {\n        const _picId = window.localStorage.getItem('picId');\n        let picIdArr = Array(1).fill(_picId);\n        picIdArr.push(res.picId);\n        props.localStoreAction(1, 'picId', picIdArr);\n      } else {\n        props.localStoreAction(1, 'picId', res.picId);\n      }\n    })\n    return imageUploadPromise;\n  }\n\n  // 每次编辑器状态发生改变的时候调用这个函数,传递的参数是RawDraftContentState类型\n  const onEditorChange = editorContent => {\n    setEditorContent(editorContent)\n  };\n\n  return (\n    <div>\n      <Editor\n        editorState={editorState}\n        toolbarClassName=\"home-toolbar\"\n        wrapperClassName=\"home-wrapper\"\n        editorClassName=\"home-editor\"\n        localization={{ locale: 'zh', translations: { 'generic.add': '添加' } }}\n        wrapperClassName=\"wysiwyg-wrapper\"\n        placeholder=\"请输入正文\"\n        onEditorStateChange={onEditorStateChange}\n        onContentStateChange={onEditorChange} \n        toolbar={{\n          history: { inDropdown: true },\n          inline: { inDropdown: false },\n          list: { inDropdown: true },\n          textAlign: { inDropdown: true },\n          image: { uploadCallback: imageUploadCallBack },\n        }}\n      />\n    </div>\n  )\n}","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-25 07:42:31\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 07:42:34\n * @ 文件解释: 富文本容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { RichComponent } from '../components/RichComponents';\n\nconst RichContainer = props => <RichComponent {...props} />\n\nexport default connect()(RichContainer)","/**\n * @ 作者: Gszs\n * @ 创建时间: 2019-05-04 22:08:25\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-28 11:57:40\n * @ 文件解释: 表单上传公共组件(涵盖富文本,markdown)\n */\n\nimport React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Upload,\n  Button,\n  Icon,\n  message\n} from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport RadioContainer from './FormSmallComponent/containers/RadioContainer';\nimport TextareaContainer from './FormSmallComponent/containers/TextareaContainer';\nimport MarkdownContainer from './FormSmallComponent/containers/ MarkdownContainer';\nimport SelectContainer from './FormSmallComponent/containers/SelectContainer';\nimport RichContainer from './FormSmallComponent/containers/RichContainer';\nimport '../../style/components/common/uploadComponent.less';\n\nconst BaseFormComponent = props => {\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImgUrl] = useState('');\n  // 用来获取原始组件的push方法\n  const history = props.routerPath;\n\n  const [fileList, setfileList] = useState([]);\n\n  // 表单配置\n  const formList = props.FormConfig;\n\n  // 判断是否要开启横向表格布局\n  const checkFormItemLayout = () => {\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 19, offset: 1 },\n      },\n    };\n    if (props.formItemLayout) return formItemLayout\n  }\n\n  // Base64\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === 'done') {\n      getBase64(info.file.originFileObj, imageUrl => {\n        setLoading(false);\n        setImgUrl(imageUrl);\n      })\n    }\n  };\n\n  // 配置上传\n  const uploadConfig = {\n    // 移除文件\n    onRemove: file => {\n      const index = fileList.indexOf(file); //取被删除者下标\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setfileList(newFileList);\n    },\n\n    //上传前的操作\n    beforeUpload: file => {\n      const imgType = ['image/jpeg', 'image/jpg', 'image/png'];\n\n      // 处理图片\n      if (file.type.split('/')[0] === 'image') {\n        const isLt10M = file.size / 1024 / 1024 < 10; // 限制图片不得大于10M\n        const checkImgType = imgType.filter(\n          fileType => file.type === fileType\n        );\n        if (!checkImgType) {\n          message.error('图片上传类型只允许JPG , PNG, JPEG,请检查你的格式');\n        }\n        if (!isLt10M) {\n          message.error('图片大小不允许超过10M');\n        }\n      }\n\n      // 处理视频 \n      if (file.type.split('/')[0] === 'video') {\n        const isLt300M = file.size / 1024 / 1024 < 300; // 限制视频不得大于300M\n        if (!isLt300M) {\n          message.error('视频大小不允许超过300M');\n        }\n      }\n      setfileList([...fileList, file]);\n      return false;\n    },\n\n    listType: 'picture-card',\n    // showUploadList: false,\n    // fileList,\n  };\n\n  // uploadButton按钮\n  const uploadButton = (\n    <div>\n      <Icon type={loading ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">\n        { props.uploadFileName }\n      </div>\n    </div>\n  );\n\n  // 上传提交\n  const handleSubmit = e => {\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        const formData = new FormData();\n        fileList.forEach(file => {\n          formData.append('file', file);\n        });\n        Object.keys(values).map((cv, index) => {\n          formData.append(cv, values[cv]);\n        });\n        // props._startAction -> 用于在FormAction中做开始请求的中转Action\n        props.addFormAction(props.interfaceUrl, formData, props._startAction);\n      } else {\n        message.error(`表单格式有误`);\n      }\n    });\n  };\n\n  // 核心处理(渲染整个表格)\n  const initForm = () => {\n    const { getFieldDecorator } = props.form,\n      FormItem = Form.Item,\n      formItemList = [];\n\n    // 正则处理特殊字符\n    const RegExpStr = /[^<>&*%$^|\\\\]+$/gi;\n\n    if (formList && formList.length > 0) {\n      formList.forEach(item => {\n\n        let label = item.label,\n          field = item.field,\n          initialValue = item.initialValue || '',\n          placeholder = item.placeholder || '';\n\n        // 文本框\n        if (item.type === 'text') {\n          const input_text = (\n            <FormItem key={field} label={label}>\n              {getFieldDecorator(field, {\n                rules: [\n                  {\n                    required: true,\n                    message: placeholder,\n                  },\n                  {\n                    pattern: new RegExp(RegExpStr, 'ig'),\n                    message: '不允许输入特殊字符',\n                  },\n                ],\n                // initialValue: initialValue\n              })(<Input type={item.text} placeholder={placeholder} />)}\n            </FormItem>\n          );\n          formItemList.push(input_text);\n        }\n        // Markdown\n        else if (item.type === 'markdown') {\n          const input_text = (\n            <FormItem key={field} label={label}>\n              {getFieldDecorator(field, {\n                rules: [\n                  {\n                    required: true,\n                    message: placeholder,\n                  }\n                ]\n              })(<MarkdownContainer />)}\n            </FormItem>\n          );\n          formItemList.push(input_text);\n        }\n        // 下拉框\n        else if (item.type === 'select') {\n          const input_text = <SelectContainer\n            selectConfig={item}\n            getFieldDecorator={getFieldDecorator}\n          />\n          formItemList.push(input_text);\n        }\n        // \b文本区域\n        else if (item.type === 'textarea') {\n          const input_textarea = <TextareaContainer\n            textareaConfig={item}\n            getFieldDecorator={getFieldDecorator}\n          />\n          formItemList.push(input_textarea);\n        }\n        // 单选框\n        else if (item.type === 'radio') {\n          const radioInput = <RadioContainer\n            getFieldDecorator={getFieldDecorator}\n            radioConfig={item}\n          />\n          formItemList.push(radioInput);\n        }\n        // 富文本\n        else if (item.type === 'richText') {\n          const richText = (<FormItem key={field} label={label} >\n            {getFieldDecorator(field)(<RichContainer />)}\n          </FormItem>)\n          formItemList.push(richText);\n        }\n        // 文件 \n        else if (item.type === 'file') {\n          const input_file = (\n            <FormItem key={field} label={label}>\n              {getFieldDecorator(field)(\n                <Upload\n                  {...uploadConfig}\n                  onChange={handleChange}\n                >\n                  {\n                    props.singleFile ?\n                      fileList.length >= 1 ? null : imageUrl ?\n                        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton\n                      :\n                      imageUrl ?\n                        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton\n                  }\n                </Upload>\n              )}\n            </FormItem>\n          );\n          formItemList.push(input_file);\n        }\n      });\n    }\n    return formItemList;\n  };\n  return (\n    <Form onSubmit={handleSubmit} ref={props._ref} {...checkFormItemLayout()} >\n      {initForm()}\n      {/* 如果没有设置submitButtonName则表示嵌入到Modal里 */}\n      <FormItem>\n        {\n          props.submitButtonName ?\n            <Button\n              loading={loading}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"submitButton\"\n            >\n              {loading ? `${props.submitButtonName}中` : `${props.submitButtonName}`}\n            </Button> :\n            <></>\n        }\n      </FormItem>\n    </Form>\n  );\n};\n\nexport default Form.create()(BaseFormComponent);\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-07-29 10:13:13\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-23 23:13:28\n * @ 文件解释: 公共上传文件容器组件\n */\n\n/**\n * @description 使用方法\n * @one 获取表格基础设置\n * @two 获取路由跳转\b\bhistory\n * @three 获取Action\n * @four  获取上传完后的跳转地址\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport BaseFormComponent from '../components/Common/uploadComponent';\nimport { addFormAction } from '../action/FormAction';\n\nconst UpoloadComponentContainer = props => <BaseFormComponent {...props} />\n\nexport default connect(\n  null, {\n    addFormAction,\n  }\n)(UpoloadComponentContainer);\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-07-30 15:20:35\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-10 14:13:48\n * @ 文件解释: 表格数据 - Action\n */\n\nimport * as formConstants from '../constants/FormConstants';\n\n/**\n * @description 新增表单\n * @param {String} path axios请求地址\n * @param {Object} path 开始请求的中转Action\n */\nexport const addFormAction = (axiosPath, formData, _startAction) => {\n  return {\n    type: formConstants.addForm._start,\n    axiosPath,\n    formData,\n    _startAction\n  }\n}\n\n// // 新增表单成功\n// export const addFormSuccessAction = payload => {\n//   return {\n//     type: formConstants.addForm._success,\n//     payload\n//   }\n// }\n\n// // 新增表单失败\n// export const addFormErrorAction = error => {\n//   return {\n//     type: formConstants.addForm._fail,\n//     error\n//   }\n// }\n\n\n\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-18 23:39:16\n * @ Modified by: Gszs\n * @ Modified time: 2019-09-25 20:11:01\n * @ 文件解释: 新增项目UI组件\n */\n\nimport React from 'react';\nimport UpoloadComponentContainer from '@/containers/uploadComponentContainer'\nimport BreadcrumbCustom from '../BreadcrumbCustom';\nimport '@/style/components/project/addProject.less';\nimport { _findAllOrganization, _allProjectType, _addProject } from '@/axios/config';\n\nexport const AddProject = props => {\n\n  // 配置表单\n  const addProject = [\n    {\n      label: '项目名称',\n      field: 'proName',\n      type: 'text',\n      placeholder: '请输入项目名称',\n      initialValue: '请输入项目名称'\n    },\n    {\n      label: '组织',\n      field: 'proDesc',\n      type: 'select',\n      initialValue: 'Default',\n      axiosPath: _findAllOrganization, // 请求地址\n      on: true //这个Boolean值是用于下拉框的数据是否需要动态获取\n    },\n    {\n      label: '项目类型',\n      field: 'proTypeId',\n      type: 'radio',\n      radioDesc: [ // 如果不是动态获取数据,要设置为这样的格式\n        {\n          id: 1,\n          name: '敏捷开发',\n          desc: '搜集用户故事、规划迭代、进度管理、团队协作、用例管理、缺陷追踪、评审回顾、总结沉淀'\n        },\n        {\n          id: 2,\n          name: '软件开发',\n          desc: '跟踪开发任务和处理BUG'\n        }\n      ],\n      on: true,\n      axiosPath: _allProjectType\n    },\n    // {\n    //   label: '项目描述',\n    //   field: 'projectDesc',\n    //   type: 'textarea',\n    //   placeholder: '请简单填入此项目描述',\n    //   initialValue: '请简单填入此项目描述...'\n    // },\n    {\n      label: '项目详情',\n      field: 'proDesc',\n      type: 'markdown',\n      placeholder: '请填入项目详情',\n    },\n    {\n      label: '项目标图',\n      field: 'avatar',\n      type: 'file'\n    }\n  ]\n\n  return (\n    <>\n      <BreadcrumbCustom first=\"项目管理\" second={props.routerTitle} />\n      {/* 创建项目 */}\n      <div className=\"headerName\"><span> 创建项目 </span></div> \n      <hr />\n      <div className=\"addProjectForm\">\n        <UpoloadComponentContainer\n          FormConfig={addProject} \n          formItemLayout = {true} // 是否开启横向表格布局\n          submitButtonName = \"创建项目\"\n          interfaceUrl = {_addProject}\n        />\n      </div>\n    </>\n  )\n}\n","/**\n * @ Author: Gszs\n * @ Create Time: 2019-09-18 23:34:44\n * @ Modified by: Gszs\n * @ Modified time: 2019-10-19 13:25:50\n * @ 文件解释: 新增项目容器组件\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AddProject } from '../../components/project/AddProject';\nimport { getNewOgSelector } from '../../selector/organization/organizationSelector'\n\nconst AddProjectContainer = props => <AddProject {...props} />\n\nconst mapStateToProps = state => {\n  return {\n    _allOg: getNewOgSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps, null )(AddProjectContainer);"],"sourceRoot":""}